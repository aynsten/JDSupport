@model WebUI.Appliance

@{
    ViewBag.Title = "设备报修";
    Layout = "~/Views/Shared/_LayoutMobile.cshtml";
}

<h2>设备报修</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>空调报修</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.AppId, "AppId", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @*@Html.DropDownList("AppId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AppId, "", new { @class = "text-danger" })*@
                @Html.HiddenFor(model => model.AppId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductSN, "设备管理号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductSN, new { htmlAttributes = new { @class = "form-control", @ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.ProductSN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BigClass, "我的设备", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BigClass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BigClass, "", new { @class = "text-danger" })*@
                <div style="padding:7px 10px;">
                    @Html.DisplayFor(model => model.BigClass) @Html.DisplayFor(model => model.AppType)
                    @Html.HiddenFor(model => model.BigClass) @Html.HiddenFor(model => model.AppType)
                </div>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.AppType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AppType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AppType, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerDepName, "设备所属公司", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OwnerDepName, "DepName", "DepName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnerDepName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "详细地址", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("UserName", "联系人姓名", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("UserName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("UserName", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("UserMobilePhone", "联系人手机", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("UserMobilePhone", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("UserMobilePhone", new { @class = "text-danger" })
                <span>用于接收维修状态信息短信</span>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("UserMobileShort", "联系人短号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("UserMobileShort", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("UserMobileShort", new { @class = "text-danger" })
                <span>镇海炼化虚拟网短号，用于联系</span>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("FaultPhenomenon", "故障现象", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("FaultPhenomenon", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("FaultPhenomenon", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="确定报修" class="btn btn-default" />
                @Html.ActionLink("取消", "cx", "sh", new { id = @Model.ProductSN }, new { @class = "btn btn-sm btn-default" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("报修的列表", "Index")
</div>
