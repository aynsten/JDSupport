#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tiyi.JD.SQLServerDAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JiadianDB")]
	public partial class JiadianDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertAppliance(Appliance instance);
    partial void UpdateAppliance(Appliance instance);
    partial void DeleteAppliance(Appliance instance);
    partial void InsertAspNetRoles(AspNetRoles instance);
    partial void UpdateAspNetRoles(AspNetRoles instance);
    partial void DeleteAspNetRoles(AspNetRoles instance);
    partial void InsertAspNetUserClaims(AspNetUserClaims instance);
    partial void UpdateAspNetUserClaims(AspNetUserClaims instance);
    partial void DeleteAspNetUserClaims(AspNetUserClaims instance);
    partial void InsertAspNetUserLogins(AspNetUserLogins instance);
    partial void UpdateAspNetUserLogins(AspNetUserLogins instance);
    partial void DeleteAspNetUserLogins(AspNetUserLogins instance);
    partial void InsertAspNetUserRoles(AspNetUserRoles instance);
    partial void UpdateAspNetUserRoles(AspNetUserRoles instance);
    partial void DeleteAspNetUserRoles(AspNetUserRoles instance);
    partial void InsertAspNetUsers(AspNetUsers instance);
    partial void UpdateAspNetUsers(AspNetUsers instance);
    partial void DeleteAspNetUsers(AspNetUsers instance);
    partial void InsertBaoxiuBill(BaoxiuBill instance);
    partial void UpdateBaoxiuBill(BaoxiuBill instance);
    partial void DeleteBaoxiuBill(BaoxiuBill instance);
    partial void InsertCorporation(Corporation instance);
    partial void UpdateCorporation(Corporation instance);
    partial void DeleteCorporation(Corporation instance);
    partial void InsertFault(Fault instance);
    partial void UpdateFault(Fault instance);
    partial void DeleteFault(Fault instance);
    partial void InsertPaigongBill(PaigongBill instance);
    partial void UpdatePaigongBill(PaigongBill instance);
    partial void DeletePaigongBill(PaigongBill instance);
    partial void InsertProductSN(ProductSN instance);
    partial void UpdateProductSN(ProductSN instance);
    partial void DeleteProductSN(ProductSN instance);
    partial void InsertRepairman(Repairman instance);
    partial void UpdateRepairman(Repairman instance);
    partial void DeleteRepairman(Repairman instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertWeibaoLog(WeibaoLog instance);
    partial void UpdateWeibaoLog(WeibaoLog instance);
    partial void DeleteWeibaoLog(WeibaoLog instance);
    #endregion
		
		public JiadianDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JiadianDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JiadianDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JiadianDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistory
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<Appliance> Appliance
		{
			get
			{
				return this.GetTable<Appliance>();
			}
		}
		
		public System.Data.Linq.Table<AppUser> AppUser
		{
			get
			{
				return this.GetTable<AppUser>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRoles> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaims> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaims>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogins> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogins>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRoles>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUsers> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUsers>();
			}
		}
		
		public System.Data.Linq.Table<BaoxiuBill> BaoxiuBill
		{
			get
			{
				return this.GetTable<BaoxiuBill>();
			}
		}
		
		public System.Data.Linq.Table<Corporation> Corporation
		{
			get
			{
				return this.GetTable<Corporation>();
			}
		}
		
		public System.Data.Linq.Table<Fault> Fault
		{
			get
			{
				return this.GetTable<Fault>();
			}
		}
		
		public System.Data.Linq.Table<PaigongBill> PaigongBill
		{
			get
			{
				return this.GetTable<PaigongBill>();
			}
		}
		
		public System.Data.Linq.Table<ProductSN> ProductSN
		{
			get
			{
				return this.GetTable<ProductSN>();
			}
		}
		
		public System.Data.Linq.Table<Repairman> Repairman
		{
			get
			{
				return this.GetTable<Repairman>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<WeibaoLog> WeibaoLog
		{
			get
			{
				return this.GetTable<WeibaoLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__MigrationHistory")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appliance")]
	public partial class Appliance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AppId;
		
		private string _ProductSN;
		
		private string _FixedSN;
		
		private string _AssetSN;
		
		private string _BigClass;
		
		private string _AppName;
		
		private string _AppType;
		
		private string _Model;
		
		private string _PowerCold;
		
		private string _PowerHot;
		
		private string _Power;
		
		private string _Factory;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private System.Nullable<System.DateTime> _InstallationDate;
		
		private System.Nullable<System.DateTime> _ScrapDate;
		
		private bool _IsScrapped;
		
		private bool _IsUsing;
		
		private string _OwnerDepName;
		
		private string _Address;
		
		private string _Remark;
		
		private EntitySet<BaoxiuBill> _BaoxiuBill;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIdChanging(System.Guid value);
    partial void OnAppIdChanged();
    partial void OnProductSNChanging(string value);
    partial void OnProductSNChanged();
    partial void OnFixedSNChanging(string value);
    partial void OnFixedSNChanged();
    partial void OnAssetSNChanging(string value);
    partial void OnAssetSNChanged();
    partial void OnBigClassChanging(string value);
    partial void OnBigClassChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnAppTypeChanging(string value);
    partial void OnAppTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerColdChanging(string value);
    partial void OnPowerColdChanged();
    partial void OnPowerHotChanging(string value);
    partial void OnPowerHotChanged();
    partial void OnPowerChanging(string value);
    partial void OnPowerChanged();
    partial void OnFactoryChanging(string value);
    partial void OnFactoryChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnInstallationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationDateChanged();
    partial void OnScrapDateChanging(System.Nullable<System.DateTime> value);
    partial void OnScrapDateChanged();
    partial void OnIsScrappedChanging(bool value);
    partial void OnIsScrappedChanged();
    partial void OnIsUsingChanging(bool value);
    partial void OnIsUsingChanged();
    partial void OnOwnerDepNameChanging(string value);
    partial void OnOwnerDepNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Appliance()
		{
			this._BaoxiuBill = new EntitySet<BaoxiuBill>(new Action<BaoxiuBill>(this.attach_BaoxiuBill), new Action<BaoxiuBill>(this.detach_BaoxiuBill));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					this.OnAppIdChanging(value);
					this.SendPropertyChanging();
					this._AppId = value;
					this.SendPropertyChanged("AppId");
					this.OnAppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSN", DbType="NVarChar(32)")]
		public string ProductSN
		{
			get
			{
				return this._ProductSN;
			}
			set
			{
				if ((this._ProductSN != value))
				{
					this.OnProductSNChanging(value);
					this.SendPropertyChanging();
					this._ProductSN = value;
					this.SendPropertyChanged("ProductSN");
					this.OnProductSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedSN", DbType="NVarChar(32)")]
		public string FixedSN
		{
			get
			{
				return this._FixedSN;
			}
			set
			{
				if ((this._FixedSN != value))
				{
					this.OnFixedSNChanging(value);
					this.SendPropertyChanging();
					this._FixedSN = value;
					this.SendPropertyChanged("FixedSN");
					this.OnFixedSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSN", DbType="NVarChar(64)")]
		public string AssetSN
		{
			get
			{
				return this._AssetSN;
			}
			set
			{
				if ((this._AssetSN != value))
				{
					this.OnAssetSNChanging(value);
					this.SendPropertyChanging();
					this._AssetSN = value;
					this.SendPropertyChanged("AssetSN");
					this.OnAssetSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigClass", DbType="NVarChar(32)")]
		public string BigClass
		{
			get
			{
				return this._BigClass;
			}
			set
			{
				if ((this._BigClass != value))
				{
					this.OnBigClassChanging(value);
					this.SendPropertyChanging();
					this._BigClass = value;
					this.SendPropertyChanged("BigClass");
					this.OnBigClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppType", DbType="NVarChar(32)")]
		public string AppType
		{
			get
			{
				return this._AppType;
			}
			set
			{
				if ((this._AppType != value))
				{
					this.OnAppTypeChanging(value);
					this.SendPropertyChanging();
					this._AppType = value;
					this.SendPropertyChanged("AppType");
					this.OnAppTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(128)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerCold", DbType="NVarChar(32)")]
		public string PowerCold
		{
			get
			{
				return this._PowerCold;
			}
			set
			{
				if ((this._PowerCold != value))
				{
					this.OnPowerColdChanging(value);
					this.SendPropertyChanging();
					this._PowerCold = value;
					this.SendPropertyChanged("PowerCold");
					this.OnPowerColdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerHot", DbType="NVarChar(32)")]
		public string PowerHot
		{
			get
			{
				return this._PowerHot;
			}
			set
			{
				if ((this._PowerHot != value))
				{
					this.OnPowerHotChanging(value);
					this.SendPropertyChanging();
					this._PowerHot = value;
					this.SendPropertyChanged("PowerHot");
					this.OnPowerHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="NVarChar(32)")]
		public string Power
		{
			get
			{
				return this._Power;
			}
			set
			{
				if ((this._Power != value))
				{
					this.OnPowerChanging(value);
					this.SendPropertyChanging();
					this._Power = value;
					this.SendPropertyChanged("Power");
					this.OnPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factory", DbType="NVarChar(64)")]
		public string Factory
		{
			get
			{
				return this._Factory;
			}
			set
			{
				if ((this._Factory != value))
				{
					this.OnFactoryChanging(value);
					this.SendPropertyChanging();
					this._Factory = value;
					this.SendPropertyChanged("Factory");
					this.OnFactoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallationDate
		{
			get
			{
				return this._InstallationDate;
			}
			set
			{
				if ((this._InstallationDate != value))
				{
					this.OnInstallationDateChanging(value);
					this.SendPropertyChanging();
					this._InstallationDate = value;
					this.SendPropertyChanged("InstallationDate");
					this.OnInstallationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ScrapDate
		{
			get
			{
				return this._ScrapDate;
			}
			set
			{
				if ((this._ScrapDate != value))
				{
					this.OnScrapDateChanging(value);
					this.SendPropertyChanging();
					this._ScrapDate = value;
					this.SendPropertyChanged("ScrapDate");
					this.OnScrapDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrapped", DbType="Bit NOT NULL")]
		public bool IsScrapped
		{
			get
			{
				return this._IsScrapped;
			}
			set
			{
				if ((this._IsScrapped != value))
				{
					this.OnIsScrappedChanging(value);
					this.SendPropertyChanging();
					this._IsScrapped = value;
					this.SendPropertyChanged("IsScrapped");
					this.OnIsScrappedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsing", DbType="Bit NOT NULL")]
		public bool IsUsing
		{
			get
			{
				return this._IsUsing;
			}
			set
			{
				if ((this._IsUsing != value))
				{
					this.OnIsUsingChanging(value);
					this.SendPropertyChanging();
					this._IsUsing = value;
					this.SendPropertyChanged("IsUsing");
					this.OnIsUsingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepName", DbType="NVarChar(32)")]
		public string OwnerDepName
		{
			get
			{
				return this._OwnerDepName;
			}
			set
			{
				if ((this._OwnerDepName != value))
				{
					this.OnOwnerDepNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepName = value;
					this.SendPropertyChanged("OwnerDepName");
					this.OnOwnerDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Appliance_BaoxiuBill", Storage="_BaoxiuBill", ThisKey="AppId", OtherKey="AppId")]
		public EntitySet<BaoxiuBill> BaoxiuBill
		{
			get
			{
				return this._BaoxiuBill;
			}
			set
			{
				this._BaoxiuBill.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoxiuBill(BaoxiuBill entity)
		{
			this.SendPropertyChanging();
			entity.Appliance = this;
		}
		
		private void detach_BaoxiuBill(BaoxiuBill entity)
		{
			this.SendPropertyChanging();
			entity.Appliance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppUser")]
	public partial class AppUser
	{
		
		private System.Guid _AppId;
		
		private System.Guid _UserId;
		
		public AppUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					this._AppId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRoles> _AspNetUserRoles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRoles()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRoles>(new Action<AspNetUserRoles>(this.attach_AspNetUserRoles), new Action<AspNetUserRoles>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRoles_AspNetUserRoles", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRoles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaims : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaims()
		{
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserClaims", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogins : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogins()
		{
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserLogins", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRoles> _AspNetRoles;
		
		private EntityRef<AspNetUsers> _AspNetUsers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRoles()
		{
			this._AspNetRoles = default(EntityRef<AspNetRoles>);
			this._AspNetUsers = default(EntityRef<AspNetUsers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUsers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRoles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRoles_AspNetUserRoles", Storage="_AspNetRoles", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetRoles AspNetRoles
		{
			get
			{
				return this._AspNetRoles.Entity;
			}
			set
			{
				AspNetRoles previousValue = this._AspNetRoles.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRoles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRoles.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRoles.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRoles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserRoles", Storage="_AspNetUsers", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public AspNetUsers AspNetUsers
		{
			get
			{
				return this._AspNetUsers.Entity;
			}
			set
			{
				AspNetUsers previousValue = this._AspNetUsers.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUsers.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUsers.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUsers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaims> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogins> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRoles> _AspNetUserRoles;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUsers()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaims>(new Action<AspNetUserClaims>(this.attach_AspNetUserClaims), new Action<AspNetUserClaims>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogins>(new Action<AspNetUserLogins>(this.attach_AspNetUserLogins), new Action<AspNetUserLogins>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRoles>(new Action<AspNetUserRoles>(this.attach_AspNetUserRoles), new Action<AspNetUserRoles>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserClaims", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaims> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserLogins", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogins> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUsers_AspNetUserRoles", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRoles> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaims entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogins entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogins entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRoles entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUsers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoxiuBill")]
	public partial class BaoxiuBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BxId;
		
		private System.Guid _AppId;
		
		private string _ProductSN;
		
		private string _BigClass;
		
		private string _AppType;
		
		private string _DepName;
		
		private string _Address;
		
		private string _UserName;
		
		private string _UserMobilePhone;
		
		private string _UserMobileShort;
		
		private string _FaultPhenomenon;
		
		private System.DateTime _CreateDate;
		
		private string _BillStatus;
		
		private string _HandleResult;
		
		private bool _IsAccept;
		
		private bool _IsCanceled;
		
		private bool _IsCompleted;
		
		private string _Remark;
		
		private EntityRef<Appliance> _Appliance;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBxIdChanging(System.Guid value);
    partial void OnBxIdChanged();
    partial void OnAppIdChanging(System.Guid value);
    partial void OnAppIdChanged();
    partial void OnProductSNChanging(string value);
    partial void OnProductSNChanged();
    partial void OnBigClassChanging(string value);
    partial void OnBigClassChanged();
    partial void OnAppTypeChanging(string value);
    partial void OnAppTypeChanged();
    partial void OnDepNameChanging(string value);
    partial void OnDepNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserMobilePhoneChanging(string value);
    partial void OnUserMobilePhoneChanged();
    partial void OnUserMobileShortChanging(string value);
    partial void OnUserMobileShortChanged();
    partial void OnFaultPhenomenonChanging(string value);
    partial void OnFaultPhenomenonChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnBillStatusChanging(string value);
    partial void OnBillStatusChanged();
    partial void OnHandleResultChanging(string value);
    partial void OnHandleResultChanged();
    partial void OnIsAcceptChanging(bool value);
    partial void OnIsAcceptChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public BaoxiuBill()
		{
			this._Appliance = default(EntityRef<Appliance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BxId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BxId
		{
			get
			{
				return this._BxId;
			}
			set
			{
				if ((this._BxId != value))
				{
					this.OnBxIdChanging(value);
					this.SendPropertyChanging();
					this._BxId = value;
					this.SendPropertyChanged("BxId");
					this.OnBxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					if (this._Appliance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppIdChanging(value);
					this.SendPropertyChanging();
					this._AppId = value;
					this.SendPropertyChanged("AppId");
					this.OnAppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSN", DbType="NVarChar(32)")]
		public string ProductSN
		{
			get
			{
				return this._ProductSN;
			}
			set
			{
				if ((this._ProductSN != value))
				{
					this.OnProductSNChanging(value);
					this.SendPropertyChanging();
					this._ProductSN = value;
					this.SendPropertyChanged("ProductSN");
					this.OnProductSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigClass", DbType="NVarChar(32)")]
		public string BigClass
		{
			get
			{
				return this._BigClass;
			}
			set
			{
				if ((this._BigClass != value))
				{
					this.OnBigClassChanging(value);
					this.SendPropertyChanging();
					this._BigClass = value;
					this.SendPropertyChanged("BigClass");
					this.OnBigClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppType", DbType="NVarChar(32)")]
		public string AppType
		{
			get
			{
				return this._AppType;
			}
			set
			{
				if ((this._AppType != value))
				{
					this.OnAppTypeChanging(value);
					this.SendPropertyChanging();
					this._AppType = value;
					this.SendPropertyChanged("AppType");
					this.OnAppTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepName", DbType="NVarChar(32)")]
		public string DepName
		{
			get
			{
				return this._DepName;
			}
			set
			{
				if ((this._DepName != value))
				{
					this.OnDepNameChanging(value);
					this.SendPropertyChanging();
					this._DepName = value;
					this.SendPropertyChanged("DepName");
					this.OnDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(32)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobilePhone", DbType="NVarChar(32)")]
		public string UserMobilePhone
		{
			get
			{
				return this._UserMobilePhone;
			}
			set
			{
				if ((this._UserMobilePhone != value))
				{
					this.OnUserMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UserMobilePhone = value;
					this.SendPropertyChanged("UserMobilePhone");
					this.OnUserMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobileShort", DbType="NVarChar(32)")]
		public string UserMobileShort
		{
			get
			{
				return this._UserMobileShort;
			}
			set
			{
				if ((this._UserMobileShort != value))
				{
					this.OnUserMobileShortChanging(value);
					this.SendPropertyChanging();
					this._UserMobileShort = value;
					this.SendPropertyChanged("UserMobileShort");
					this.OnUserMobileShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaultPhenomenon", DbType="NVarChar(1024)")]
		public string FaultPhenomenon
		{
			get
			{
				return this._FaultPhenomenon;
			}
			set
			{
				if ((this._FaultPhenomenon != value))
				{
					this.OnFaultPhenomenonChanging(value);
					this.SendPropertyChanging();
					this._FaultPhenomenon = value;
					this.SendPropertyChanged("FaultPhenomenon");
					this.OnFaultPhenomenonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillStatus", DbType="NVarChar(64)")]
		public string BillStatus
		{
			get
			{
				return this._BillStatus;
			}
			set
			{
				if ((this._BillStatus != value))
				{
					this.OnBillStatusChanging(value);
					this.SendPropertyChanging();
					this._BillStatus = value;
					this.SendPropertyChanged("BillStatus");
					this.OnBillStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleResult", DbType="NVarChar(1024)")]
		public string HandleResult
		{
			get
			{
				return this._HandleResult;
			}
			set
			{
				if ((this._HandleResult != value))
				{
					this.OnHandleResultChanging(value);
					this.SendPropertyChanging();
					this._HandleResult = value;
					this.SendPropertyChanged("HandleResult");
					this.OnHandleResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccept", DbType="Bit NOT NULL")]
		public bool IsAccept
		{
			get
			{
				return this._IsAccept;
			}
			set
			{
				if ((this._IsAccept != value))
				{
					this.OnIsAcceptChanging(value);
					this.SendPropertyChanging();
					this._IsAccept = value;
					this.SendPropertyChanged("IsAccept");
					this.OnIsAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL")]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1024)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Appliance_BaoxiuBill", Storage="_Appliance", ThisKey="AppId", OtherKey="AppId", IsForeignKey=true)]
		public Appliance Appliance
		{
			get
			{
				return this._Appliance.Entity;
			}
			set
			{
				Appliance previousValue = this._Appliance.Entity;
				if (((previousValue != value) 
							|| (this._Appliance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Appliance.Entity = null;
						previousValue.BaoxiuBill.Remove(this);
					}
					this._Appliance.Entity = value;
					if ((value != null))
					{
						value.BaoxiuBill.Add(this);
						this._AppId = value.AppId;
					}
					else
					{
						this._AppId = default(System.Guid);
					}
					this.SendPropertyChanged("Appliance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corporation")]
	public partial class Corporation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CorpId;
		
		private string _CorpName;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<bool> _OrderIndex;
		
		private string _LinkmanName;
		
		private string _Telephone;
		
		private string _MobilePhone;
		
		private string _MobileShort;
		
		private string _Email;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCorpIdChanging(System.Guid value);
    partial void OnCorpIdChanged();
    partial void OnCorpNameChanging(string value);
    partial void OnCorpNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnOrderIndexChanging(System.Nullable<bool> value);
    partial void OnOrderIndexChanged();
    partial void OnLinkmanNameChanging(string value);
    partial void OnLinkmanNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnMobileShortChanging(string value);
    partial void OnMobileShortChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Corporation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CorpId
		{
			get
			{
				return this._CorpId;
			}
			set
			{
				if ((this._CorpId != value))
				{
					this.OnCorpIdChanging(value);
					this.SendPropertyChanging();
					this._CorpId = value;
					this.SendPropertyChanged("CorpId");
					this.OnCorpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string CorpName
		{
			get
			{
				return this._CorpName;
			}
			set
			{
				if ((this._CorpName != value))
				{
					this.OnCorpNameChanging(value);
					this.SendPropertyChanging();
					this._CorpName = value;
					this.SendPropertyChanged("CorpName");
					this.OnCorpNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Bit")]
		public System.Nullable<bool> OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkmanName", DbType="NVarChar(32)")]
		public string LinkmanName
		{
			get
			{
				return this._LinkmanName;
			}
			set
			{
				if ((this._LinkmanName != value))
				{
					this.OnLinkmanNameChanging(value);
					this.SendPropertyChanging();
					this._LinkmanName = value;
					this.SendPropertyChanged("LinkmanName");
					this.OnLinkmanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(32)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(32)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileShort", DbType="NVarChar(16)")]
		public string MobileShort
		{
			get
			{
				return this._MobileShort;
			}
			set
			{
				if ((this._MobileShort != value))
				{
					this.OnMobileShortChanging(value);
					this.SendPropertyChanging();
					this._MobileShort = value;
					this.SendPropertyChanged("MobileShort");
					this.OnMobileShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(64)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fault")]
	public partial class Fault : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FaultId;
		
		private string _FaultText;
		
		private string _BigClass;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFaultIdChanging(System.Guid value);
    partial void OnFaultIdChanged();
    partial void OnFaultTextChanging(string value);
    partial void OnFaultTextChanged();
    partial void OnBigClassChanging(string value);
    partial void OnBigClassChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Fault()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaultId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FaultId
		{
			get
			{
				return this._FaultId;
			}
			set
			{
				if ((this._FaultId != value))
				{
					this.OnFaultIdChanging(value);
					this.SendPropertyChanging();
					this._FaultId = value;
					this.SendPropertyChanged("FaultId");
					this.OnFaultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaultText", DbType="NVarChar(64)")]
		public string FaultText
		{
			get
			{
				return this._FaultText;
			}
			set
			{
				if ((this._FaultText != value))
				{
					this.OnFaultTextChanging(value);
					this.SendPropertyChanging();
					this._FaultText = value;
					this.SendPropertyChanged("FaultText");
					this.OnFaultTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigClass", DbType="NVarChar(32)")]
		public string BigClass
		{
			get
			{
				return this._BigClass;
			}
			set
			{
				if ((this._BigClass != value))
				{
					this.OnBigClassChanging(value);
					this.SendPropertyChanging();
					this._BigClass = value;
					this.SendPropertyChanged("BigClass");
					this.OnBigClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaigongBill")]
	public partial class PaigongBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PgId;
		
		private System.Guid _BxId;
		
		private System.Guid _AppId;
		
		private string _ProductSN;
		
		private string _BigClass;
		
		private string _AppType;
		
		private string _DepName;
		
		private string _Address;
		
		private string _UserName;
		
		private string _UserMobilePhone;
		
		private string _UserMobileShort;
		
		private string _FaultPhenomenon;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private bool _IsAccept;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private string _HandleResult;
		
		private System.Nullable<System.Guid> _WxgId;
		
		private string _WxgRealName;
		
		private string _WxgMobilePhone;
		
		private string _WxgMobileShort;
		
		private bool _IsClosed;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPgIdChanging(System.Guid value);
    partial void OnPgIdChanged();
    partial void OnBxIdChanging(System.Guid value);
    partial void OnBxIdChanged();
    partial void OnAppIdChanging(System.Guid value);
    partial void OnAppIdChanged();
    partial void OnProductSNChanging(string value);
    partial void OnProductSNChanged();
    partial void OnBigClassChanging(string value);
    partial void OnBigClassChanged();
    partial void OnAppTypeChanging(string value);
    partial void OnAppTypeChanged();
    partial void OnDepNameChanging(string value);
    partial void OnDepNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserMobilePhoneChanging(string value);
    partial void OnUserMobilePhoneChanged();
    partial void OnUserMobileShortChanging(string value);
    partial void OnUserMobileShortChanged();
    partial void OnFaultPhenomenonChanging(string value);
    partial void OnFaultPhenomenonChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIsAcceptChanging(bool value);
    partial void OnIsAcceptChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnHandleResultChanging(string value);
    partial void OnHandleResultChanged();
    partial void OnWxgIdChanging(System.Nullable<System.Guid> value);
    partial void OnWxgIdChanged();
    partial void OnWxgRealNameChanging(string value);
    partial void OnWxgRealNameChanged();
    partial void OnWxgMobilePhoneChanging(string value);
    partial void OnWxgMobilePhoneChanged();
    partial void OnWxgMobileShortChanging(string value);
    partial void OnWxgMobileShortChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PaigongBill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PgId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PgId
		{
			get
			{
				return this._PgId;
			}
			set
			{
				if ((this._PgId != value))
				{
					this.OnPgIdChanging(value);
					this.SendPropertyChanging();
					this._PgId = value;
					this.SendPropertyChanged("PgId");
					this.OnPgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BxId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BxId
		{
			get
			{
				return this._BxId;
			}
			set
			{
				if ((this._BxId != value))
				{
					this.OnBxIdChanging(value);
					this.SendPropertyChanging();
					this._BxId = value;
					this.SendPropertyChanged("BxId");
					this.OnBxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					this.OnAppIdChanging(value);
					this.SendPropertyChanging();
					this._AppId = value;
					this.SendPropertyChanged("AppId");
					this.OnAppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSN", DbType="NVarChar(32)")]
		public string ProductSN
		{
			get
			{
				return this._ProductSN;
			}
			set
			{
				if ((this._ProductSN != value))
				{
					this.OnProductSNChanging(value);
					this.SendPropertyChanging();
					this._ProductSN = value;
					this.SendPropertyChanged("ProductSN");
					this.OnProductSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigClass", DbType="NVarChar(32)")]
		public string BigClass
		{
			get
			{
				return this._BigClass;
			}
			set
			{
				if ((this._BigClass != value))
				{
					this.OnBigClassChanging(value);
					this.SendPropertyChanging();
					this._BigClass = value;
					this.SendPropertyChanged("BigClass");
					this.OnBigClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppType", DbType="NVarChar(32)")]
		public string AppType
		{
			get
			{
				return this._AppType;
			}
			set
			{
				if ((this._AppType != value))
				{
					this.OnAppTypeChanging(value);
					this.SendPropertyChanging();
					this._AppType = value;
					this.SendPropertyChanged("AppType");
					this.OnAppTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepName", DbType="NVarChar(32)")]
		public string DepName
		{
			get
			{
				return this._DepName;
			}
			set
			{
				if ((this._DepName != value))
				{
					this.OnDepNameChanging(value);
					this.SendPropertyChanging();
					this._DepName = value;
					this.SendPropertyChanged("DepName");
					this.OnDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(32)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobilePhone", DbType="NVarChar(32)")]
		public string UserMobilePhone
		{
			get
			{
				return this._UserMobilePhone;
			}
			set
			{
				if ((this._UserMobilePhone != value))
				{
					this.OnUserMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UserMobilePhone = value;
					this.SendPropertyChanged("UserMobilePhone");
					this.OnUserMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobileShort", DbType="NVarChar(16)")]
		public string UserMobileShort
		{
			get
			{
				return this._UserMobileShort;
			}
			set
			{
				if ((this._UserMobileShort != value))
				{
					this.OnUserMobileShortChanging(value);
					this.SendPropertyChanging();
					this._UserMobileShort = value;
					this.SendPropertyChanged("UserMobileShort");
					this.OnUserMobileShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaultPhenomenon", DbType="NVarChar(1024)")]
		public string FaultPhenomenon
		{
			get
			{
				return this._FaultPhenomenon;
			}
			set
			{
				if ((this._FaultPhenomenon != value))
				{
					this.OnFaultPhenomenonChanging(value);
					this.SendPropertyChanging();
					this._FaultPhenomenon = value;
					this.SendPropertyChanged("FaultPhenomenon");
					this.OnFaultPhenomenonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccept", DbType="Bit NOT NULL")]
		public bool IsAccept
		{
			get
			{
				return this._IsAccept;
			}
			set
			{
				if ((this._IsAccept != value))
				{
					this.OnIsAcceptChanging(value);
					this.SendPropertyChanging();
					this._IsAccept = value;
					this.SendPropertyChanged("IsAccept");
					this.OnIsAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleResult", DbType="NVarChar(1024)")]
		public string HandleResult
		{
			get
			{
				return this._HandleResult;
			}
			set
			{
				if ((this._HandleResult != value))
				{
					this.OnHandleResultChanging(value);
					this.SendPropertyChanging();
					this._HandleResult = value;
					this.SendPropertyChanged("HandleResult");
					this.OnHandleResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WxgId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WxgId
		{
			get
			{
				return this._WxgId;
			}
			set
			{
				if ((this._WxgId != value))
				{
					this.OnWxgIdChanging(value);
					this.SendPropertyChanging();
					this._WxgId = value;
					this.SendPropertyChanged("WxgId");
					this.OnWxgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WxgRealName", DbType="NVarChar(32)")]
		public string WxgRealName
		{
			get
			{
				return this._WxgRealName;
			}
			set
			{
				if ((this._WxgRealName != value))
				{
					this.OnWxgRealNameChanging(value);
					this.SendPropertyChanging();
					this._WxgRealName = value;
					this.SendPropertyChanged("WxgRealName");
					this.OnWxgRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WxgMobilePhone", DbType="NVarChar(32)")]
		public string WxgMobilePhone
		{
			get
			{
				return this._WxgMobilePhone;
			}
			set
			{
				if ((this._WxgMobilePhone != value))
				{
					this.OnWxgMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._WxgMobilePhone = value;
					this.SendPropertyChanged("WxgMobilePhone");
					this.OnWxgMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WxgMobileShort", DbType="NVarChar(16)")]
		public string WxgMobileShort
		{
			get
			{
				return this._WxgMobileShort;
			}
			set
			{
				if ((this._WxgMobileShort != value))
				{
					this.OnWxgMobileShortChanging(value);
					this.SendPropertyChanging();
					this._WxgMobileShort = value;
					this.SendPropertyChanged("WxgMobileShort");
					this.OnWxgMobileShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1024)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSN")]
	public partial class ProductSN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private int _SN;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ActiveTime;
		
		private System.Nullable<System.DateTime> _Downtime;
		
		private bool _ActiveStatus;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnActiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActiveTimeChanged();
    partial void OnDowntimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDowntimeChanged();
    partial void OnActiveStatusChanging(bool value);
    partial void OnActiveStatusChanged();
    #endregion
		
		public ProductSN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", DbType="Int NOT NULL")]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActiveTime
		{
			get
			{
				return this._ActiveTime;
			}
			set
			{
				if ((this._ActiveTime != value))
				{
					this.OnActiveTimeChanging(value);
					this.SendPropertyChanging();
					this._ActiveTime = value;
					this.SendPropertyChanged("ActiveTime");
					this.OnActiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Downtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Downtime
		{
			get
			{
				return this._Downtime;
			}
			set
			{
				if ((this._Downtime != value))
				{
					this.OnDowntimeChanging(value);
					this.SendPropertyChanging();
					this._Downtime = value;
					this.SendPropertyChanged("Downtime");
					this.OnDowntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveStatus", DbType="Bit NOT NULL")]
		public bool ActiveStatus
		{
			get
			{
				return this._ActiveStatus;
			}
			set
			{
				if ((this._ActiveStatus != value))
				{
					this.OnActiveStatusChanging(value);
					this.SendPropertyChanging();
					this._ActiveStatus = value;
					this.SendPropertyChanged("ActiveStatus");
					this.OnActiveStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repairman")]
	public partial class Repairman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WxgId;
		
		private string _RealName;
		
		private string _JobNumber;
		
		private string _MobilePhone;
		
		private string _MobileShort;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWxgIdChanging(System.Guid value);
    partial void OnWxgIdChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnJobNumberChanging(string value);
    partial void OnJobNumberChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnMobileShortChanging(string value);
    partial void OnMobileShortChanged();
    #endregion
		
		public Repairman()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WxgId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WxgId
		{
			get
			{
				return this._WxgId;
			}
			set
			{
				if ((this._WxgId != value))
				{
					this.OnWxgIdChanging(value);
					this.SendPropertyChanging();
					this._WxgId = value;
					this.SendPropertyChanged("WxgId");
					this.OnWxgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobNumber", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string JobNumber
		{
			get
			{
				return this._JobNumber;
			}
			set
			{
				if ((this._JobNumber != value))
				{
					this.OnJobNumberChanging(value);
					this.SendPropertyChanging();
					this._JobNumber = value;
					this.SendPropertyChanged("JobNumber");
					this.OnJobNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(32)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileShort", DbType="NVarChar(16)")]
		public string MobileShort
		{
			get
			{
				return this._MobileShort;
			}
			set
			{
				if ((this._MobileShort != value))
				{
					this.OnMobileShortChanging(value);
					this.SendPropertyChanging();
					this._MobileShort = value;
					this.SendPropertyChanged("MobileShort");
					this.OnMobileShortChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _UserMobilePhone;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserMobilePhoneChanging(string value);
    partial void OnUserMobilePhoneChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(32)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobilePhone", DbType="NVarChar(32)")]
		public string UserMobilePhone
		{
			get
			{
				return this._UserMobilePhone;
			}
			set
			{
				if ((this._UserMobilePhone != value))
				{
					this.OnUserMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UserMobilePhone = value;
					this.SendPropertyChanged("UserMobilePhone");
					this.OnUserMobilePhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeibaoLog")]
	public partial class WeibaoLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WbId;
		
		private System.Nullable<System.Guid> _AppId;
		
		private string _FixedSN;
		
		private string _AssetSN;
		
		private string _ProductSN;
		
		private string _BigClass;
		
		private string _AppType;
		
		private string _OwerDepName;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _WbContent;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _WbDate;
		
		private string _WbJobNumber;
		
		private string _WbRealName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWbIdChanging(System.Guid value);
    partial void OnWbIdChanged();
    partial void OnAppIdChanging(System.Nullable<System.Guid> value);
    partial void OnAppIdChanged();
    partial void OnFixedSNChanging(string value);
    partial void OnFixedSNChanged();
    partial void OnAssetSNChanging(string value);
    partial void OnAssetSNChanged();
    partial void OnProductSNChanging(string value);
    partial void OnProductSNChanged();
    partial void OnBigClassChanging(string value);
    partial void OnBigClassChanged();
    partial void OnAppTypeChanging(string value);
    partial void OnAppTypeChanged();
    partial void OnOwerDepNameChanging(string value);
    partial void OnOwerDepNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnWbContentChanging(string value);
    partial void OnWbContentChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnWbDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWbDateChanged();
    partial void OnWbJobNumberChanging(string value);
    partial void OnWbJobNumberChanged();
    partial void OnWbRealNameChanging(string value);
    partial void OnWbRealNameChanged();
    #endregion
		
		public WeibaoLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WbId
		{
			get
			{
				return this._WbId;
			}
			set
			{
				if ((this._WbId != value))
				{
					this.OnWbIdChanging(value);
					this.SendPropertyChanging();
					this._WbId = value;
					this.SendPropertyChanged("WbId");
					this.OnWbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					this.OnAppIdChanging(value);
					this.SendPropertyChanging();
					this._AppId = value;
					this.SendPropertyChanged("AppId");
					this.OnAppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedSN", DbType="NVarChar(32)")]
		public string FixedSN
		{
			get
			{
				return this._FixedSN;
			}
			set
			{
				if ((this._FixedSN != value))
				{
					this.OnFixedSNChanging(value);
					this.SendPropertyChanging();
					this._FixedSN = value;
					this.SendPropertyChanged("FixedSN");
					this.OnFixedSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSN", DbType="NVarChar(64)")]
		public string AssetSN
		{
			get
			{
				return this._AssetSN;
			}
			set
			{
				if ((this._AssetSN != value))
				{
					this.OnAssetSNChanging(value);
					this.SendPropertyChanging();
					this._AssetSN = value;
					this.SendPropertyChanged("AssetSN");
					this.OnAssetSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSN", DbType="NVarChar(32)")]
		public string ProductSN
		{
			get
			{
				return this._ProductSN;
			}
			set
			{
				if ((this._ProductSN != value))
				{
					this.OnProductSNChanging(value);
					this.SendPropertyChanging();
					this._ProductSN = value;
					this.SendPropertyChanged("ProductSN");
					this.OnProductSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigClass", DbType="NVarChar(32)")]
		public string BigClass
		{
			get
			{
				return this._BigClass;
			}
			set
			{
				if ((this._BigClass != value))
				{
					this.OnBigClassChanging(value);
					this.SendPropertyChanging();
					this._BigClass = value;
					this.SendPropertyChanged("BigClass");
					this.OnBigClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppType", DbType="NVarChar(32)")]
		public string AppType
		{
			get
			{
				return this._AppType;
			}
			set
			{
				if ((this._AppType != value))
				{
					this.OnAppTypeChanging(value);
					this.SendPropertyChanging();
					this._AppType = value;
					this.SendPropertyChanged("AppType");
					this.OnAppTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwerDepName", DbType="NVarChar(32)")]
		public string OwerDepName
		{
			get
			{
				return this._OwerDepName;
			}
			set
			{
				if ((this._OwerDepName != value))
				{
					this.OnOwerDepNameChanging(value);
					this.SendPropertyChanging();
					this._OwerDepName = value;
					this.SendPropertyChanged("OwerDepName");
					this.OnOwerDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbContent", DbType="NVarChar(128)")]
		public string WbContent
		{
			get
			{
				return this._WbContent;
			}
			set
			{
				if ((this._WbContent != value))
				{
					this.OnWbContentChanging(value);
					this.SendPropertyChanging();
					this._WbContent = value;
					this.SendPropertyChanged("WbContent");
					this.OnWbContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(512)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WbDate
		{
			get
			{
				return this._WbDate;
			}
			set
			{
				if ((this._WbDate != value))
				{
					this.OnWbDateChanging(value);
					this.SendPropertyChanging();
					this._WbDate = value;
					this.SendPropertyChanged("WbDate");
					this.OnWbDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbJobNumber", DbType="NVarChar(32)")]
		public string WbJobNumber
		{
			get
			{
				return this._WbJobNumber;
			}
			set
			{
				if ((this._WbJobNumber != value))
				{
					this.OnWbJobNumberChanging(value);
					this.SendPropertyChanging();
					this._WbJobNumber = value;
					this.SendPropertyChanged("WbJobNumber");
					this.OnWbJobNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WbRealName", DbType="NVarChar(32)")]
		public string WbRealName
		{
			get
			{
				return this._WbRealName;
			}
			set
			{
				if ((this._WbRealName != value))
				{
					this.OnWbRealNameChanging(value);
					this.SendPropertyChanging();
					this._WbRealName = value;
					this.SendPropertyChanged("WbRealName");
					this.OnWbRealNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
